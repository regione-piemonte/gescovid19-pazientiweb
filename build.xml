<?xml version="1.0" encoding="UTF-8"?>

<!-- ##################################################### -->
<!-- # build.xml file per compilazione e generazione     # -->
<!-- # del pacchetto per il rilascio dell'applicazione.  # -->
<!-- #                                                   # -->
<!-- # Per una lista completa dei tasks eseguibili usare # -->
<!-- # l'argomento di ant -projecthelp quando si         # -->
<!-- # richiama questo build.xml.                        # -->
<!-- ##################################################### -->

<project basedir="."
         default="default"
         name="pazientiweb"
         xmlns:ivy="antlib:fr.jayasoft.ivy.ant" >

	<description>Build file per il progetto: [pazientiweb]</description>

	<!-- -->
	<echo message="Loading build properties..." />
	<echo message="ant home ${ant.home}" />
	<property file="buildfiles/build.properties" />
	<property file="buildfiles/build.locale.properties" />
	<property file="buildfiles/${target}.properties" />
	
	<taskdef name="encrypt" classname="EncryptTask" classpath="buildfiles/taskdef" />
	<taskdef name="decrypt" classname="DecryptTask" classpath="buildfiles/taskdef" />
	<property name="secret" value="${SECRET_PWD}"/>
	<decrypt key="${secret}" decryptAll="true" />

	<!-- -->
	<path id="library.ref">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
		<fileset dir="${extlib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>

	</path>



	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: init                                              # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="init" description="Inizializza lo script Ant.">
		<tstamp />
		<condition property="target" value="dev">
			<equals arg1="${target}" arg2="$${target}" />
		</condition>
		<mkdir dir="${build}/classes" />
		<mkdir dir="${temp}/${target}/${earLib}" />
		<mkdir dir="${build}/archives/${target}" />
		<mkdir dir="${dist}/${target}" />
		<mkdir dir="${build}/javadoc" />
		<mkdir dir="${build}/cache" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: default                                           # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="default"
	        description="Eseguire il build per l'environment
	                     specificato a linea di comando con
	                     -Dtarget=${target} o per tutti gli
	                     environment (se non specificato).">

		<condition property="first-call" value="distribution">
			<not>
				<equals arg1="${target}" arg2="$${target}" />
			</not>
		</condition>

		<condition property="first-call" value="all-targets">
			<equals arg1="${target}" arg2="$${target}" />
		</condition>

		<echo message="server: ${server}" />
		<echo message="target: ${target}" />
		<echo message="first-call: ${first-call}" />

		<antcall target="clean-all" />
		<antcall target="${first-call}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [DISTRIB]: all-targets                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="all-targets"
	        description="Esegue il build per le varie distribuzioni in sequenza.">
		<!--PROTECTED REGION ID(R-1748880042) ENABLED START-->
		<!-- Inserire le varie distribuzioni di cui si intende eseguire il build. -->
		<antcall target="distribution" />
		<!--PROTECTED REGION END-->
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [DISTRIB]: distribution                                   # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="distribution" depends="package-all"
	        description="Costruisce il tar per la distribuzione." >
		<echo message="====== Creating distribution for ${target} ..."/>
		<echo message="====== Basedir: ${build}/archives/${target} ..."/>
		<!--PROTECTED REGION ID(R-64293809) ENABLED START-->
		<!-- inserire qui eventuali statement dll aggiuntivi da invocare
		     nel processo di distribuzione del tar -->
		<!--PROTECTED REGION END-->
		<tar tarfile="${dist}/${target}/${dist-file-name}.tar"
		     basedir="${build}/archives/${target}"
		     includes="*.ear,*.xml">
			<tarfileset dir="buildfiles">
				<include name="readme.txt"/>
				<!--PROTECTED REGION ID(R-1413323135) ENABLED START-->
				<!-- inserire qui eventuali statement per includere oggetti extra nel tar -->
				<!--PROTECTED REGION END-->
			</tarfileset>
		</tar>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [IVY]: resolve-dependencies                               # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="resolve-dependencies"
	        description="carica le librerie dal repository remoto">
		<ivy:configure file="${basedir}/buildfiles/ivyconf.xml" />
		<ivy:resolve file="${basedir}/buildfiles/ivy.xml" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [IVY]: internal target: load-dependencies                 # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="load-dependencies"
	        depends="resolve-dependencies"
	        description="Risolve le dipendenze esterne.">
		<ivy:retrieve pattern="${basedir}/lib/[artifact].[type]" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: compile-all                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="compile-all" depends="init,load-dependencies"
	        description="Compila tutti i sorgenti.">

		<echo message="===> Target: ${target}" />

		<!-- compilazione dei sorgenti -->
		<javac srcdir="${src}/java" destdir="${build}/classes"
		       optimize="on" deprecation="on"
		       compiler="modern"
		       debug="on" debuglevel="lines,vars,source">
			<classpath refid="library.ref" />
		</javac>

		<!-- copia dei sorgenti -->
		<copy todir="${build}/classes">
			<fileset dir="${src}/java" excludes="**/*.java*,**/*.jbx*" />
		</copy>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: environment-recreate                              # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="environment-recreate"
	        description="Ricrea l&apos;environment di configurazione per il target corrente (per applicare le sostituzionidelle variabili).">
		<mkdir dir="build/temp/conf" />
		<copy todir="build/temp/conf" overwrite="true">
			<fileset dir="${conf}" />
		</copy>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: environment-config                                # -->
	<!-- #         Gestire qui i  replace delle variabile d'ambiente # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="environment-config"
	        description="Predispone le configurazioni dipendenti dall&apos;ambiente." >

		<echo message="subwebapp=${subwebapp}"/>

		<!-- Gestione replace delle variabile d'ambiente create dal generatore -->
		
		<!-- disabilitazione del filtro di XSRF -->
		<!-- Raffa commento
		<condition property="xsrffilter.disabled" value="false">
		      <equals arg1="${xsrffilter.disabled}" arg2="$${xsrffilter.disabled}" />
		</condition>
		<replace dir="${build}/temp/conf/web/" token="@@@XSRFFILTER.DISABLED@@@" value="${xsrffilter.disabled}"/>
		-->

		<!-- modalita' di sviluppo del filtro IDAdapter -->
		<!-- Raffa commento
		<condition property="idadapterfilter.devmode" value="false">
		      <equals arg1="${idadapterfilter.devmode}" arg2="$${idadapterfilter.devmode}" />
		</condition>
		<replace dir="${build}/temp/conf/web/" token="@@@IDADAPTERFILTER.DEVMODE@@@" value="${idadapterfilter.devmode}"/>
		--> 
		
		<!-- gestione di un eventuale CORS -->
		<!-- Raffa  -->
		<condition property="corsfilter.enablecors" value="false">
		      <equals arg1="${corsfilter.enablecors}" arg2="$${corsfilter.enablecors}" />
		</condition>
		<replace dir="${build}/temp/conf/web/" token="@@@CORSFILTER.ENABLECORS@@@" value="${corsfilter.enablecors}"/>

		
		<!--<setPropertiesLoader subwebapp="${subwebapp}" /> -->

		<!--PROTECTED REGION ID(R816510908) ENABLED START-->
		<replace dir="${build}/temp/conf/web/" token="@@@jdbc.url@@@" value="${jdbc.url}"/>
		<replace dir="${build}/temp/conf/web/" token="@@@jdbc.username@@@" value="${jdbc.username}"/>
		<replace dir="${build}/temp/conf/web/" token="@@@jdbc.password@@@" value="${jdbc.password}"/>
		
		<!-- Raffa commento
		<condition property="logout.url" value="${logout.gestionepazienti.url}">
			<equals arg1="${subwebapp}"    arg2="gestionepazienti"/>
		</condition>
		<condition property="accessdenied.url" value="${accessdenied.gestionepazienti.url}">
			<equals arg1="${subwebapp}"    arg2="gestionepazienti"/>
		</condition>

		<condition property="logout.url" value="${logout.dashboardcovid.url}">
			<equals arg1="${subwebapp}"    arg2="dashboardcovid"/>
		</condition>
		<condition property="accessdenied.url" value="${accessdenied.dashboardcovid.url}">
			<equals arg1="${subwebapp}"    arg2="dashboardcovid"/>
		</condition>

		<condition property="logout.url" value="${logout.visurapazienti.url}">
			<equals arg1="${subwebapp}"    arg2="visurapazienti"/>
		</condition>
		<condition property="accessdenied.url" value="${accessdenied.visurapazienti.url}">
			<equals arg1="${subwebapp}"    arg2="visurapazienti"/>
		</condition>
		
		
		<condition property="logout.url" value="${logout.visurammg.url}">
			<equals arg1="${subwebapp}"    arg2="visurammg"/>
		</condition>
		<condition property="accessdenied.url" value="${accessdenied.visurammg.url}">
			<equals arg1="${subwebapp}"    arg2="visurammg"/>
		</condition> 
			
		<replace dir="${build}/temp/conf/web/" token="@@@subwebapp@@@" value="${subwebapp}"/>
		
		
		<replace dir="${build}/temp/conf/web/" token="@@@logout.url@@@" value="${logout.url}"/>
		<replace dir="${build}/temp/conf/web/" token="@@@accessdenied.url@@@" value="${accessdenied.url}"/>
		
		-->
		<!--
		-->
		
		<!-- Raffa commento
		<replace dir="${build}/temp/conf/web/" token="@@@auraprefix.url@@@" value="${auraprefix.url}"/>
		<replace dir="${build}/temp/conf/web/" token="@@@aura.user@@@" value="${aura.user}"/>
		<replace dir="${build}/temp/conf/web/" token="@@@aura.pwd@@@" value="${aura.pwd}"/>
		<replace dir="${build}/temp/conf/web/" token="@@@aura.timeoutmills@@@" value="${aura.timeoutmills}"/>
		-->
		
		<!--	
		<mkdir dir="${build}/temp/web" />
		<copy file="${src}/web/fe/app-${subwebapp}/index.html" todir="${build}/temp/web" overwrite="true"/>
		<replace dir="${build}/temp/web/" token="@@@appdynamics.config.appKey@@@" value="${appdynamics.config.appKey}"/>
		-->

		<!--PROTECTED REGION END-->
	</target>
	
	<!-- = = = = = = = = = = = = = = = = =
	          macrodef: setPropertiesLoader           funziona con ant 1.8
	         = = = = = = = = = = = = = = = = = -->
<!--
	<macrodef name="setPropertiesLoader">
	        <attribute name="webapp" />
	        <sequential>
	    		<replace dir="${build}/temp/conf/web/" token="@@@logout.url@@@" value="${logout.@{webapp}.url}"/>
	    		<replace dir="${build}/temp/conf/web/" token="@@@accessdenied.url@@@" value="${accessdenied.@{webapp}.url}"/>
	        </sequential>
	    </macrodef>
-->
	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: package-all                                        # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="package-all"
	        description="Esegue il packaging di ogni componente del prodotto">
		<!-- antcall target="clean-all" / -->
		
		<!-- Raffa commento
		
		<delete dir="src/web/fe/app-visurapazienti"/>
		<delete dir="src/web/fe/app-visurammg"/>
		<copy  todir="src/web/fe/app-visurapazienti" >
			<fileset dir="src/web/fe/pwa-visurapazienti/dist" />
		</copy>
		-->
		
		<echo message="subwebapp -> gestionepazienti"/>
		
		<antcall target="package-ear" >
			<param name="subwebapp" value="gestionepazienti"/>
		</antcall>
		<copy  file="${build}/archives/${target}/pazientiwebsrv.ear" todir="D:\\Portable\\jboss-eap-6.4\\standalone\\deployments" overwrite="true"></copy>
		
		<delete dir="${build}/temp/conf" />
		
		<!-- Raffa commento
		<echo message="subwebapp-> dashboardcovid"/>
		<antcall target="package-ear" >
			<param name="subwebapp" value="dashboardcovid"/>
		</antcall>
		<copy  file="${build}/archives/${target}/dashboardcovidwebsrv.ear" todir="D:\\Portable\\jboss-eap-6.4\\standalone\\deployments" overwrite="true"></copy>
		<delete dir="${build}/temp/conf" />

		<echo message="subwebapp-> visurapazienti"/>
		<antcall target="package-ear" >
			<param name="subwebapp" value="visurapazienti"/>
		</antcall>
		<copy  file="${build}/archives/${target}/visurapazientiwebsrv.ear" todir="D:\\Portable\\jboss-eap-6.4\\standalone\\deployments" overwrite="true"></copy>
		<delete dir="${build}/temp/conf" />
		
		<delete dir="src/web/fe/app-visurapazienti"/>
		<copy  todir="src/web/fe/app-visurammg" >
			<fileset dir="src/web/fe/pwa-visurammg/dist" />
		</copy>

		<echo message="subwebapp-> visurammg"/>
		<antcall target="package-ear" >
			<param name="subwebapp" value="visurammg"/>
		</antcall>
		<copy  file="${build}/archives/${target}/visurammgwebsrv.ear" todir="D:\\Portable\\jboss-eap-6.4\\standalone\\deployments" overwrite="true"></copy>
		<delete dir="${build}/temp/conf" />
		
		-->
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: package-ear                                        # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="package-ear"
            depends="environment-recreate, environment-config, compile-all, package-commons-jar, 
                     package-all-ws-wars"
            description="costruisce l&apos;ear">

		
		<!-- librerie infrastrutturali o client di servizi fruiti -->
		<copy todir="${temp}/${target}/${earLib}">
			<fileset dir="${lib}" includes="${ear-libs-filter} ${ear-custom-libs-filter}" />
			<fileset dir="${build}/archives/${target}" includes="*common.jar" />
		</copy>
		<echo message="subwebapp=${subwebapp}"/>
		<ear appxml="${temp}/conf/ear/application-gestionepazienti.xml"
		     destfile="${build}/archives/${target}/pazientiwebsrv.ear">
			<fileset dir="${build}/archives/${target}" includes="*.jar,*.war" excludes="*client*.jar,*common.jar" />
			<fileset dir="${temp}/${target}">
				<include name="**/*" />
			</fileset>
			<metainf dir="${temp}/conf/ear/" includes="jboss-deployment-structure.xml" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-Date" value="${DSTAMP}" />
				<attribute name="Target" value="${target}" />
				<attribute name="Appl-Version" value="${version}" />
			</manifest>
		</ear>
	</target>


	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: distribution-single                                # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="distribution-single" depends="clean-all"
	        description="Costruisce il tar per la distribuzione." >
		<echo message="====== Creating distribution for ${target} ..."/>
		<echo message="====== Basedir: ${build}/archives/${target} ..."/>
		
		<delete dir="src/web/fe/app-visurapazienti"/>
		<copy  todir="src/web/fe/app-visurapazienti" >
			<fileset dir="src/web/fe/pwa-visurapazienti/dist" />
		</copy>	
		
		<delete dir="src/web/fe/app-visurammg"/>
		<copy  todir="src/web/fe/app-visurammg" >
			<fileset dir="src/web/fe/pwa-visurammg/dist" />
		</copy>
		
		<antcall target="package-ear" />
		
		
		<!--PROTECTED REGION ID(R-64293809) ENABLED START-->
		<!-- inserire qui eventuali statement dll aggiuntivi da invocare
		     nel processo di distribuzione del tar -->
		<!--PROTECTED REGION END-->
		<tar tarfile="${dist}/${target}/pazientiwebsrv-${version}.tar"
		     basedir="${build}/archives/${target}"
		     includes="*.ear,*.xml">
			<tarfileset dir="buildfiles">
				<include name="readme.txt"/>
				<!--PROTECTED REGION ID(R-1413323135) ENABLED START-->
				<!-- inserire qui eventuali statement per includere oggetti extra nel tar -->
				<!--PROTECTED REGION END-->
			</tarfileset>
		</tar>
		<copy file="${dist}/${target}/pazientiwebsrv-${version}.tar" tofile="${dist}/${target}/pazientiwebsrv-latest.tar"/>
		
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: package-all-ws-wars                                # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="package-all-ws-wars"
	        description="Costruisce i war di tutti i web services">
		<!-- richiamo costruzione war backend REST  -->
		<antcall target="_package-ws-war">
			<param name="component.name" value="pazientiweb"/>
			<param name="service.name" value="be"/>
			<param name="binding.code" value="rest"/>
			<param name="service.type" value="appl"/>
			
			<!-- Raffa commento
			<param name="subwebapp" value="${subwebapp}"/> 
			-->
			
		</antcall>
		
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: _package-ws-war                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="_package-ws-war"
	        description="Costruisce il war per un singolo web service">
		<!-- prende in input i parametri: component.name, service.name, binding.code, service.type, service.ver (deve essere a 2 cifre!!!) -->

        		<echo message="webinf dir: ${temp}/conf/web/${service.name}/${binding.code}/WEB-INF/" />
				<war destfile="${build}/archives/${target}/${service.type}-${service.name}-${binding.code}.war"
				     webxml="${temp}/conf/web/${service.name}/${binding.code}/WEB-INF/web.xml"
				     roundup="false">
					<webinf dir="${temp}/conf/web/${service.name}/${binding.code}/WEB-INF/">
						<include name="*.xml" />
						<!-- Raffa <include name="**/*.properties" /> -->
						<!-- Raffa <include name="${temp}/classes/*.properties" /> -->
					</webinf>
					<classes dir="${build}/classes">
						<!-- <include name="it/csi/*/pazientiweb/business/${service.name}/**"/> -->
					    <include name="it/csi/*/pazientiweb/**"/>
					</classes>
					
		
					<classes dir="${temp}/conf/web/${service.name}/${binding.code}/WEB-INF/classes">
						<include name="*.xml"/>
						<!-- Raffa <include name="*.properties"/> -->
				    </classes>
				    
					<lib dir="${lib}" includes="*" excludes="${war-exclude-libs-filter}, ${war-exclude-custom-libs-filter}" />
					<lib dir="${extlib}" includes="*" excludes="${war-exclude-libs-filter}, ${war-exclude-custom-libs-filter}" />
				
					<!-- se sono presenti risorse web statiche vengono inserite nel pacchetto
					     es. distribuizone webpack gia' buildata della parte client di una 
					     Single Page Application -->
					<fileset dir="${src}/web/${service.name}/${binding.code}" includes="**"></fileset>
					
					<!-- Raffa commento
					<fileset dir="${src}/web/fe/app-${subwebapp}" includes="**" ></fileset>
					-->
					
					<!--
					<fileset dir="${build}/temp/web" includes="index.html"></fileset>
					-->
					
					
				</war>

	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: package-commons-jar                                # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="package-commons-jar" description="Genera il jar per le classi comuni.">
		<jar destfile="${build}/archives/${target}/pazientiweb-common.jar"
		     basedir="${build}/classes"
		     includes="it/csi/gestionepazienti/pazientiweb/business/**,
		               it/csi/gestionepazienti/pazientiweb/integration/**,
		               it/csi/gestionepazienti/pazientiweb/util/**">
		
			<exclude name="it/csi/gestionepazienti/pazientiweb/business/be/**" />
			<exclude name="it/csi/gestionepazienti/pazientiweb/integration/be/**" />
		</jar>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-all                                        # -->
	<!-- ############################################################# -->
	<!-- nota: non cancella la directory "dist" appositamente: v. STDMDD-495.
	per ripulire anche la "dist" richiamare esplicitamente il target "clean-dist" -->
	<!-- 
	
	-->
	<target name="clean-all" description="Rimuove tutte le cartelle temporanee."
	        depends=" clean-archives, clean-classes, clean-javadoc, clean-temp" />

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-cache                                      # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-cache"
	        description="Rimuove la cartella di cache di Ivy e la lib.">
		<delete dir="${build}/cache" failonerror="no" />
		<delete dir="${lib}" failonerror="no" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-temp                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-temp"
	        description="Rimuove la cartella dei files temporanei di build.">
		<delete dir="${temp}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-archives                                  # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-archives"
	        description="Rimuove la cartella degli archivi (war, ear, ...).">
		<delete dir="${build}/archives" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-dist                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-dist"
	        description="Rimuove la cartella delle distribuzioni.">
		<delete dir="${dist}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-classes                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-classes"
	        description="Rimuove la cartella dei sorgenti compilati.">
		<delete dir="${build}/classes" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-javadoc                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-javadoc"
	        description="Rimuove la cartella temporanea dei javadoc.">
		<delete dir="${build}/javadoc" />
	</target>

	
	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: _clean-web-inf                                   # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="_clean-web-inf"
	        description="Rimuove il contenuto di lib e classes della
	                     web application (per run locali).">
		<delete dir="${srcweb}/WEB-INF/classes" />
		<delete dir="${srcweb}/WEB-INF/lib" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: about                                             # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="about" description="Visualizza l'elenco dei target pubblici dello script.">
		<loadproperties srcfile="buildfiles/build.properties" />
		<loadfile property="about" srcfile="buildfiles/about.txt" />
		<echo message="${about}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: about-custom                                      # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="about-custom"
	        description="Visualizza l'elenco di tutti i target,
	                     pubblici e privati
	                     (equivalente a 'ant -projecthelp')" >

		<loadproperties srcfile="buildfiles/build.properties" />
		<loadfile property="about-custom" srcfile="buildfiles/about-custom.txt" />
		<echo message="${about-custom}" />
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
		</java>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: show-vars                                         # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="show-vars" depends="init"
	        description="Visualizza tutte le variabili impostate nei file di properties e/o da linea di comando">
		<echo message="*****************************************" />
		<echo message="********  ${componente} environment  *******" />
		<echo message="*****************************************" />
		<echoproperties />
		<echo />
		<echo />
		<echo message="*****************************************" />
		<echo message="********    java properties      ********" />
		<echo message="*****************************************" />
		<echoproperties prefix="java."/>
	</target>


	<taskdef resource="net/sf/antcontrib/antlib.xml">
	  <classpath>
	    <pathelement location="/usr/share/ant/lib/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>
	
	<!-- Per cifrare le property di prod -->
	<taskdef name="encrypt" classname="EncryptTask" classpath="buildfiles/taskdef" />
	<taskdef name="decrypt" classname="DecryptTask" classpath="buildfiles/taskdef" />
	
	<target name="encrypt" description=" Utility per esecure la cifratura di un valore, use -Dvalue=[value to encrypt]">
		
		<loadproperties srcfile="buildfiles/${target}.properties" />
		<property name="secret" value="${SECRET_PWD}"/>
		<encrypt key="${secret}" value="${value}" showEncryption="true" /> 
	</target>
	
	<target name="decrypt" description=" Utility per esecure la de-cifratura di un valore">
		
		<loadproperties srcfile="buildfiles/${target}.properties" />
		<property name="secret" value="${SECRET_PWD}"/>
		
		<decrypt key="${secret}" decryptall="true" debug="on"/>
		
		
	</target>


	<path id="ivy.lib.path">
		<fileset dir="/appserv/jenkins/apache-ivy-2.0.0/" includes="*.jar" erroronmissingdir="false"/>
		<fileset dir="${ant.home}/lib" includes="*.jar"/>
	</path>

	<taskdef resource="org/apache/ivy/ant/antlib.xml"
			uri="antlib:fr.jayasoft.ivy.ant" classpathref="ivy.lib.path"/>

	<!--PROTECTED REGION ID(R1519293945) ENABLED START-->
	<!-- inserire qui eventuali target extra -->
	<!--PROTECTED REGION END-->

</project>
