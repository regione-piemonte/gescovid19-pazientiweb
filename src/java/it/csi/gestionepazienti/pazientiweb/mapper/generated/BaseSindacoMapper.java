package it.csi.gestionepazienti.pazientiweb.mapper.generated;

import it.csi.gestionepazienti.pazientiweb.dto.Sindaco;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface BaseSindacoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sindaco
     *
     * @mbg.generated
     */
    @Delete({
        "delete from sindaco",
        "where cf_utente = #{cfUtente,jdbcType=VARCHAR}",
          "and comune_istat = #{comuneIstat,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(@Param("cfUtente") String cfUtente, @Param("comuneIstat") String comuneIstat);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sindaco
     *
     * @mbg.generated
     */
    @Insert({
        "insert into sindaco (cf_utente, comune_istat, ",
        "cognome, nome, telefono, ",
        "email)",
        "values (#{cfUtente,jdbcType=VARCHAR}, #{comuneIstat,jdbcType=VARCHAR}, ",
        "#{cognome,jdbcType=VARCHAR}, #{nome,jdbcType=VARCHAR}, #{telefono,jdbcType=VARCHAR}, ",
        "#{email,jdbcType=VARCHAR})"
    })
    int insert(Sindaco record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sindaco
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "cf_utente, comune_istat, cognome, nome, telefono, email",
        "from sindaco",
        "where cf_utente = #{cfUtente,jdbcType=VARCHAR}",
          "and comune_istat = #{comuneIstat,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="cf_utente", property="cfUtente", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="comune_istat", property="comuneIstat", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="cognome", property="cognome", jdbcType=JdbcType.VARCHAR),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="telefono", property="telefono", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR)
    })
    Sindaco selectByPrimaryKey(@Param("cfUtente") String cfUtente, @Param("comuneIstat") String comuneIstat);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sindaco
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "cf_utente, comune_istat, cognome, nome, telefono, email",
        "from sindaco"
    })
    @Results({
        @Result(column="cf_utente", property="cfUtente", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="comune_istat", property="comuneIstat", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="cognome", property="cognome", jdbcType=JdbcType.VARCHAR),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="telefono", property="telefono", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR)
    })
    List<Sindaco> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sindaco
     *
     * @mbg.generated
     */
    @Update({
        "update sindaco",
        "set cognome = #{cognome,jdbcType=VARCHAR},",
          "nome = #{nome,jdbcType=VARCHAR},",
          "telefono = #{telefono,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR}",
        "where cf_utente = #{cfUtente,jdbcType=VARCHAR}",
          "and comune_istat = #{comuneIstat,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Sindaco record);
}