package it.csi.gestionepazienti.pazientiweb.mapper.generated;

import it.csi.gestionepazienti.pazientiweb.dto.Asl;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.apache.ibatis.annotations.Param;

public interface BaseAslMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table asl
	 * @mbg.generated
	 */
	@Delete({ "delete from asl", "where cod_regione = #{codRegione,jdbcType=VARCHAR}",
			"and cod_asl = #{codAsl,jdbcType=VARCHAR}" })
	int deleteByPrimaryKey(@Param("codRegione") String codRegione, @Param("codAsl") String codAsl);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table asl
	 * @mbg.generated
	 */
	@Options(useGeneratedKeys = true, keyProperty = "idAsl")
	@Insert({ "insert into asl (cod_regione, cod_asl, ", "desc_regione, desc_asl, ", "desc_asl_estesa, id_asr)",
			"values (#{codRegione,jdbcType=VARCHAR}, #{codAsl,jdbcType=VARCHAR}, ",
			"#{descRegione,jdbcType=VARCHAR}, #{descAsl,jdbcType=VARCHAR}, ",
			"#{descAslEstesa,jdbcType=VARCHAR}, #{idAsr,jdbcType=BIGINT})" })
	int insert(Asl record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table asl
	 * @mbg.generated
	 */
	@Select({ "select", "cod_regione, cod_asl, desc_regione, desc_asl, desc_asl_estesa, id_asr", "from asl",
			"where cod_regione = #{codRegione,jdbcType=VARCHAR}", "and cod_asl = #{codAsl,jdbcType=VARCHAR}" })
	@Results({ @Result(column = "cod_regione", property = "codRegione", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "cod_asl", property = "codAsl", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "desc_regione", property = "descRegione", jdbcType = JdbcType.VARCHAR),
			@Result(column = "desc_asl", property = "descAsl", jdbcType = JdbcType.VARCHAR),
			@Result(column = "desc_asl_estesa", property = "descAslEstesa", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_asr", property = "idAsr", jdbcType = JdbcType.BIGINT) })
	Asl selectByPrimaryKey(@Param("codRegione") String codRegione, @Param("codAsl") String codAsl);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table asl
	 * @mbg.generated
	 */
	@Select({ "select", "cod_regione, cod_asl, desc_regione, desc_asl, desc_asl_estesa, id_asr", "from asl" })
	@Results({ @Result(column = "cod_regione", property = "codRegione", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "cod_asl", property = "codAsl", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "desc_regione", property = "descRegione", jdbcType = JdbcType.VARCHAR),
			@Result(column = "desc_asl", property = "descAsl", jdbcType = JdbcType.VARCHAR),
			@Result(column = "desc_asl_estesa", property = "descAslEstesa", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_asr", property = "idAsr", jdbcType = JdbcType.BIGINT) })
	List<Asl> selectAll();

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table asl
	 * @mbg.generated
	 */
	@Update({ "update asl", "set desc_regione = #{descRegione,jdbcType=VARCHAR},",
			"desc_asl = #{descAsl,jdbcType=VARCHAR},", "desc_asl_estesa = #{descAslEstesa,jdbcType=VARCHAR},",
			"id_asr = #{idAsr,jdbcType=BIGINT}", "where cod_regione = #{codRegione,jdbcType=VARCHAR}",
			"and cod_asl = #{codAsl,jdbcType=VARCHAR}" })
	int updateByPrimaryKey(Asl record);
}