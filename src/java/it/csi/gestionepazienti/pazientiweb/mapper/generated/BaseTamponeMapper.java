package it.csi.gestionepazienti.pazientiweb.mapper.generated;

import it.csi.gestionepazienti.pazientiweb.dto.Tampone;
import java.util.List;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.type.JdbcType;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Update;

public interface BaseTamponeMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Delete({ "delete from tampone", "where id_tampone = #{idTampone,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long idTampone);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Insert({ "insert into tampone (id_soggetto, id_laboratorio, ", "criterio_epidemiologico_covid19, id_test_covid, ",
			"id_ris_tamp, ", "tampone_autorizzato, data_inserimento_richiesta, ",
			"data_ultima_modifica, utente_ultima_modifica, ", "data_test, medico_richiedente, ",
			"contatto_richiedente)", "values (#{idSoggetto,jdbcType=BIGINT}, #{idLaboratorio,jdbcType=BIGINT}, ",
			"#{criterioEpidemiologicoCovid19,jdbcType=VARCHAR}, #{idTestCovid,jdbcType=BIGINT}, ",
			"#{idRisTamp,jdbcType=BIGINT}, ",
			"#{tamponeAutorizzato,jdbcType=VARCHAR}, #{dataInserimentoRichiesta,jdbcType=TIMESTAMP}, ",
			"#{dataUltimaModifica,jdbcType=TIMESTAMP}, #{utenteUltimaModifica,jdbcType=VARCHAR}, ",
			"#{dataTest,jdbcType=TIMESTAMP}, #{medicoRichiedente,jdbcType=VARCHAR}, ",
			"#{contattoRichiedente,jdbcType=VARCHAR})" })
	@Options(useGeneratedKeys = true, keyProperty = "idTampone")
	int insert(Tampone record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Select({ "select", "id_tampone, id_soggetto, id_laboratorio, criterio_epidemiologico_covid19, id_test_covid, ",
			"id_ris_tamp, tampone_autorizzato, data_inserimento_richiesta, ",
			"data_ultima_modifica, utente_ultima_modifica, data_test, medico_richiedente, ", "contatto_richiedente",
			"from tampone", "where id_tampone = #{idTampone,jdbcType=BIGINT}" })
	@Results({ @Result(column = "id_tampone", property = "idTampone", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "id_soggetto", property = "idSoggetto", jdbcType = JdbcType.BIGINT),
			@Result(column = "id_laboratorio", property = "idLaboratorio", jdbcType = JdbcType.BIGINT),
			@Result(column = "criterio_epidemiologico_covid19", property = "criterioEpidemiologicoCovid19", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_test_covid", property = "idTestCovid", jdbcType = JdbcType.BIGINT),
			@Result(column = "id_ris_tamp", property = "idRisTamp", jdbcType = JdbcType.BIGINT),
			@Result(column = "tampone_autorizzato", property = "tamponeAutorizzato", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_inserimento_richiesta", property = "dataInserimentoRichiesta", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "data_ultima_modifica", property = "dataUltimaModifica", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "utente_ultima_modifica", property = "utenteUltimaModifica", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_test", property = "dataTest", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "medico_richiedente", property = "medicoRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "contatto_richiedente", property = "contattoRichiedente", jdbcType = JdbcType.VARCHAR) })
	Tampone selectByPrimaryKey(Long idTampone);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Select({ "select", "id_tampone, id_soggetto, id_laboratorio, criterio_epidemiologico_covid19, id_test_covid, ",
			"id_ris_tamp, tampone_autorizzato, data_inserimento_richiesta, ",
			"data_ultima_modifica, utente_ultima_modifica, data_test, medico_richiedente, ", "contatto_richiedente",
			"from tampone" })
	@Results({ @Result(column = "id_tampone", property = "idTampone", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "id_soggetto", property = "idSoggetto", jdbcType = JdbcType.BIGINT),
			@Result(column = "id_laboratorio", property = "idLaboratorio", jdbcType = JdbcType.BIGINT),
			@Result(column = "criterio_epidemiologico_covid19", property = "criterioEpidemiologicoCovid19", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_test_covid", property = "idTestCovid", jdbcType = JdbcType.BIGINT),
			@Result(column = "id_ris_tamp", property = "idRisTamp", jdbcType = JdbcType.BIGINT),
			@Result(column = "tampone_autorizzato", property = "tamponeAutorizzato", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_inserimento_richiesta", property = "dataInserimentoRichiesta", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "data_ultima_modifica", property = "dataUltimaModifica", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "utente_ultima_modifica", property = "utenteUltimaModifica", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_test", property = "dataTest", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "medico_richiedente", property = "medicoRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "contatto_richiedente", property = "contattoRichiedente", jdbcType = JdbcType.VARCHAR) })
	List<Tampone> selectAll();

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Update({ "update tampone", "set id_soggetto = #{idSoggetto,jdbcType=BIGINT},",
			"id_laboratorio = #{idLaboratorio,jdbcType=BIGINT},",
			"criterio_epidemiologico_covid19 = #{criterioEpidemiologicoCovid19,jdbcType=VARCHAR},",
			"id_test_covid = #{idTestCovid,jdbcType=BIGINT},", 
			"id_ris_tamp = #{idRisTamp,jdbcType=BIGINT},",
			"tampone_autorizzato = #{tamponeAutorizzato,jdbcType=VARCHAR},",
			"data_inserimento_richiesta = #{dataInserimentoRichiesta,jdbcType=TIMESTAMP},",
			"data_ultima_modifica = #{dataUltimaModifica,jdbcType=TIMESTAMP},",
			"utente_ultima_modifica = #{utenteUltimaModifica,jdbcType=VARCHAR},",
			"data_test = #{dataTest,jdbcType=TIMESTAMP},",
			"medico_richiedente = #{medicoRichiedente,jdbcType=VARCHAR},",
			"contatto_richiedente = #{contattoRichiedente,jdbcType=VARCHAR}",
			"where id_tampone = #{idTampone,jdbcType=BIGINT}" })
	int updateByPrimaryKey(Tampone record);
}